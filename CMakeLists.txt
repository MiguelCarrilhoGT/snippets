cmake_minimum_required(VERSION 2.6)
project(snippets)

include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(posix_getch posix_getch.c)

find_package(PkgConfig REQUIRED)
if(PKG_CONFIG_FOUND)
  pkg_search_module(DBUS_GLIB dbus-glib-1)
  if(DBUS_GLIB_FOUND)
    include_directories(${DBUS_GLIB_INCLUDE_DIRS})
    link_directories(${DBUS_GLIB_LIBRARY_DIRS})
    add_executable(dbus_glib_hal_signals dbus_glib_hal_signals.c)
    target_link_libraries(dbus_glib_hal_signals ${DBUS_GLIB_LIBRARIES})
  endif(DBUS_GLIB_FOUND)
  pkg_search_module(LIBUDEV libudev)
  if (LIBUDEV_FOUND)
    include_directories(${LIBUDEV_INCLUDE_DIRS})
    link_directories(${LIBUDEV_LIBRARY_DIRS})
    add_executable(udev_enumerate udev_enumerate.cpp)
    target_link_libraries(udev_enumerate ${LIBUDEV_LIBRARIES})
  endif (LIBUDEV_FOUND)
endif(PKG_CONFIG_FOUND)

find_package(Qt4)
if(QT_FOUND)
  include_directories(${QT_INCLUDE_DIR})
  find_package(Automoc4 REQUIRED)
  if(AUTOMOC4_EXECUTABLE)
    automoc4_add_executable(dbus_qt4_hal_signals dbus_qt4_hal_signals.cpp)
    target_link_libraries(dbus_qt4_hal_signals
      ${QT_QTGUI_LIBRARY} ${QT_QTDBUS_LIBRARY})
  endif(AUTOMOC4_EXECUTABLE)
endif(QT_FOUND)

if(QT_FOUND AND LIBUDEV_FOUND)
  automoc4_add_executable(udev_monitor udev_monitor.cpp)
  target_link_libraries(udev_monitor
    ${QT_QTCORE_LIBRARY} ${LIBUDEV_LIBRARIES})
endif(QT_FOUND AND LIBUDEV_FOUND)
